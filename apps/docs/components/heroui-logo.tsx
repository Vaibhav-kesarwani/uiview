import React from "react";
import {cn} from "@heroui/theme";

import {IconSvgProps} from "@/types";
import {dataAttr} from "@/utils";
export interface LogoProps extends IconSvgProps {
  auto?: boolean;
  small?: boolean;
  outlined?: boolean;
  fill?: string;
  className?: string;
}

export const SmallLogoOutlined: React.FC<LogoProps> = ({
  auto,
  size,
  width,
  height,
  className,
  ...props
}) => (
  <svg
    className={cn("data-[auto=true]:sm:hidden block text-foreground", className)}
    data-auto={dataAttr(auto)}
    fill="none"
    height={height || size || 25}
    viewBox="0 0 126 126"
    width={width || size || 25}
    {...props}
  >
    <path
      d="M33.3529 5H92.6471C108.306 5 121 17.694 121 33.3529V92.6471C121 108.306 108.306 121 92.6471 121H33.3529C17.694 121 5 108.306 5 92.6471V33.3529C5 17.694 17.694 5 33.3529 5Z"
      stroke="currentColor"
      strokeWidth="10"
    />
    <path d="M94.9539 36V89.6887H86.3363V36H94.9539Z" fill="currentColor" />
    <path
      d="M69.0885 36H77.7339V71.3118C77.7339 75.0694 76.795 78.3987 74.9172 81.2998C73.0394 84.1835 70.3993 86.4555 66.9969 88.1158C63.5945 89.7586 59.6064 90.58 55.0327 90.58C50.4776 90.58 46.4988 89.7586 43.0964 88.1158C39.694 86.4555 37.0539 84.1835 35.1761 81.2998C33.2983 78.3987 32.3594 75.0694 32.3594 71.3118V36H40.9769V70.6565C40.9769 73.0857 41.544 75.2441 42.6781 77.1316C43.8308 79.0191 45.4577 80.5046 47.5586 81.5882C49.6595 82.6543 52.1509 83.1873 55.0327 83.1873C57.9331 83.1873 60.4338 82.6543 62.5347 81.5882C64.6542 80.5046 66.2718 79.0191 67.3873 77.1316C68.5214 75.2441 69.0885 73.0857 69.0885 70.6565V36Z"
      fill="currentColor"
    />
  </svg>
);

export const SmallLogo: React.FC<LogoProps> = ({
  auto,
  size,
  width,
  height,
  className,
  ...props
}) => (
  <svg
    className={cn("data-[auto=true]:sm:hidden block text-foreground", className)}
    data-auto={dataAttr(auto)}
    fill="none"
    height={height || size || 25}
    viewBox="0 0 126 126"
    width={width || size || 25}
    {...props}
  >
    <path
      d="M92.6471 0H33.3529C14.9326 0 0 14.9326 0 33.3529V92.6471C0 111.067 14.9326 126 33.3529 126H92.6471C111.067 126 126 111.067 126 92.6471V33.3529C126 14.9326 111.067 0 92.6471 0Z"
      fill="currentColor"
    />
    <path className="fill-background" d="M86.3181 89.4661V36H92.9271V89.4661H86.3181Z" />
    <path
      className="fill-background"
      d="M54.0894 90.58C49.9557 90.58 46.3046 89.726 43.1363 88.0181C39.9679 86.3101 37.4803 83.9215 35.6733 80.8521C33.8911 77.758 33 74.1317 33 69.9733V36.0371L39.6833 36V69.4163C39.6833 71.9411 40.1041 74.1441 40.9457 76.0253C41.812 77.8818 42.9506 79.4289 44.3616 80.6665C45.7725 81.9041 47.3195 82.8324 49.0027 83.4512C50.7107 84.0453 52.4062 84.3423 54.0894 84.3423C55.7974 84.3423 57.5053 84.0329 59.2133 83.4141C60.9212 82.7952 62.4682 81.8794 63.8544 80.6665C65.2653 79.4289 66.3916 77.8694 67.2332 75.9882C68.0748 74.107 68.4956 71.9164 68.4956 69.4163V36H75.1788V69.9733C75.1788 74.107 74.2754 77.7209 72.4684 80.815C70.6862 83.9091 68.2109 86.3101 65.0425 88.0181C61.8742 89.726 58.2231 90.58 54.0894 90.58Z"
    />
  </svg>
);

export const LargeLogo: React.FC<LogoProps> = ({auto, className, ...props}) => (
  <svg
    className={cn(
      "data-[auto=true]:hidden data-[auto=true]:sm:block block text-foreground",
      className,
    )}
    data-auto={dataAttr(auto)}
    fill="none"
    viewBox="0 0 141 27"
    {...props}
  >
    {/* <path d="M374.28 93.12V0.959961H383.688V93.12H374.28Z" fill="currentColor" />
    <path
      d="M319.093 95.04C312.053 95.04 305.824 93.5893 300.405 90.688C295.029 87.7866 290.805 83.6906 287.733 78.4C284.661 73.1093 283.125 66.9226 283.125 59.84V1.02396L292.597 0.959961V58.624C292.597 63.4026 293.408 67.5413 295.029 71.04C296.65 74.496 298.762 77.3546 301.365 79.616C304.01 81.8346 306.89 83.4773 310.005 84.544C313.12 85.6106 316.149 86.144 319.093 86.144C322.08 86.144 325.13 85.6106 328.245 84.544C331.36 83.4773 334.218 81.8346 336.821 79.616C339.424 77.3546 341.536 74.496 343.157 71.04C344.778 67.5413 345.589 63.4026 345.589 58.624V0.959961H355.061V59.84C355.061 66.9226 353.525 73.1093 350.453 78.4C347.381 83.648 343.136 87.744 337.717 90.688C332.341 93.5893 326.133 95.04 319.093 95.04Z"
      fill="currentColor"
    />
    <path
      d="M236.239 95.04C229.37 95.04 223.503 93.4827 218.639 90.368C213.775 87.2534 210.042 82.944 207.439 77.44C204.836 71.936 203.535 65.6214 203.535 58.496C203.535 51.2427 204.858 44.8854 207.503 39.424C210.148 33.9627 213.903 29.7173 218.767 26.688C223.674 23.616 229.498 22.08 236.239 22.08C243.151 22.08 249.039 23.6373 253.903 26.752C258.81 29.824 262.543 34.112 265.103 39.616C267.706 45.0774 269.007 51.3707 269.007 58.496C269.007 65.7494 267.706 72.128 265.103 77.632C262.5 83.0934 258.746 87.36 253.839 90.432C248.932 93.504 243.066 95.04 236.239 95.04ZM236.239 86.016C243.919 86.016 249.636 83.4773 253.391 78.4C257.146 73.28 259.023 66.6454 259.023 58.496C259.023 50.1333 257.124 43.4773 253.327 38.528C249.572 33.5787 243.876 31.104 236.239 31.104C231.076 31.104 226.81 32.2773 223.439 34.624C220.111 36.928 217.615 40.1494 215.951 44.288C214.33 48.384 213.519 53.12 213.519 58.496C213.519 66.816 215.439 73.4933 219.279 78.528C223.119 83.52 228.772 86.016 236.239 86.016Z"
      fill="currentColor"
    />
    <path
      d="M162.5 93.12V24H170.948V40.64L169.284 38.464C170.052 36.416 171.055 34.5387 172.292 32.832C173.529 31.0827 174.873 29.6533 176.324 28.544C178.116 26.9653 180.207 25.7707 182.596 24.96C184.985 24.1067 187.396 23.616 189.828 23.488C192.26 23.3173 194.479 23.488 196.484 24V32.832C193.967 32.192 191.215 32.0427 188.228 32.384C185.241 32.7253 182.489 33.92 179.972 35.968C177.668 37.76 175.94 39.9147 174.788 42.432C173.636 44.9067 172.868 47.552 172.484 50.368C172.1 53.1413 171.908 55.8933 171.908 58.624V93.12H162.5Z"
      fill="currentColor"
    />
    <path
      d="M116.873 95.04C110.132 95.04 104.286 93.5467 99.337 90.56C94.4304 87.5734 90.6117 83.3707 87.881 77.952C85.1504 72.5334 83.785 66.176 83.785 58.88C83.785 51.328 85.129 44.8 87.817 39.296C90.505 33.792 94.281 29.5467 99.145 26.56C104.052 23.5733 109.833 22.08 116.489 22.08C123.316 22.08 129.14 23.6587 133.961 26.816C138.782 29.9307 142.43 34.4107 144.905 40.256C147.38 46.1014 148.51 53.0773 148.297 61.184H138.697V57.856C138.526 48.896 136.585 42.1333 132.873 37.568C129.204 33.0027 123.828 30.72 116.745 30.72C109.321 30.72 103.625 33.1307 99.657 37.952C95.7317 42.7734 93.769 49.6427 93.769 58.56C93.769 67.264 95.7317 74.0267 99.657 78.848C103.625 83.6267 109.236 86.016 116.489 86.016C121.438 86.016 125.748 84.8853 129.417 82.624C133.129 80.32 136.052 77.0134 138.185 72.704L146.953 76.096C144.222 82.112 140.19 86.784 134.857 90.112C129.566 93.3974 123.572 95.04 116.873 95.04ZM99 61.184V53.312H143.241V61.184H99Z"
      fill="currentColor"
    />
    <path
      d="M0 93.12V0.959961H9.408V42.496H60.352V0.959961H69.696V93.12H60.352V51.52H9.408V93.12H0Z"
      fill="currentColor"
    /> */}

    <path
      d="M7.82 26.175L0.575 0.1875H2.955L9.4475 24.4425H9.255L15.695 0.1875H18.075L10.9175 26.175H7.82ZM21.5356 17.6175V15.675H36.5856L36.1656 16.27C36.1656 16.2 36.1656 16.1417 36.1656 16.095C36.1656 16.0367 36.1656 15.9783 36.1656 15.92C36.1656 14.7183 35.909 13.5983 35.3956 12.56C34.8823 11.5217 34.1356 10.6875 33.1556 10.0575C32.1873 9.4275 31.0031 9.1125 29.6031 9.1125C28.1798 9.1125 26.9256 9.43917 25.8406 10.0925C24.7556 10.7342 23.9098 11.6267 23.3031 12.77C22.6965 13.9017 22.3931 15.22 22.3931 16.725C22.3931 18.2417 22.6906 19.5775 23.2856 20.7325C23.8923 21.8758 24.7381 22.7683 25.8231 23.41C26.9081 24.04 28.174 24.355 29.6206 24.355C30.6823 24.355 31.604 24.2267 32.3856 23.97C33.179 23.7017 33.8323 23.3517 34.3456 22.92C34.8706 22.4883 35.2673 22.0333 35.5356 21.555C35.8156 21.065 35.979 20.6042 36.0256 20.1725H38.1781C38.1315 20.8608 37.9098 21.5667 37.5131 22.29C37.1281 23.0017 36.574 23.6667 35.8506 24.285C35.139 24.9033 34.2523 25.405 33.1906 25.79C32.1406 26.1633 30.9273 26.35 29.5506 26.35C27.754 26.35 26.1556 25.9417 24.7556 25.125C23.3673 24.3083 22.2706 23.1825 21.4656 21.7475C20.6723 20.3008 20.2756 18.6383 20.2756 16.76C20.2756 14.87 20.6781 13.2075 21.4831 11.7725C22.2881 10.3258 23.3906 9.19417 24.7906 8.3775C26.1906 7.56083 27.7831 7.1525 29.5681 7.1525C31.3881 7.1525 32.9631 7.56667 34.2931 8.395C35.6231 9.22333 36.6498 10.3492 37.3731 11.7725C38.0965 13.1842 38.4581 14.7708 38.4581 16.5325C38.4581 16.6842 38.4523 16.8767 38.4406 17.11C38.4406 17.3433 38.4348 17.5125 38.4231 17.6175H21.5356ZM52.0592 26.3325C50.3558 26.3325 48.7983 25.9533 47.3867 25.195C45.975 24.425 44.8433 23.3225 43.9917 21.8875C43.1517 20.4525 42.7317 18.7258 42.7317 16.7075C42.7317 14.6892 43.1517 12.9683 43.9917 11.545C44.8433 10.1217 45.975 9.03667 47.3867 8.29C48.7983 7.53167 50.3558 7.1525 52.0592 7.1525C53.3658 7.1525 54.5325 7.35667 55.5592 7.765C56.5858 8.16167 57.455 8.6925 58.1667 9.3575C58.8783 10.0108 59.4208 10.7283 59.7942 11.51C60.1675 12.2917 60.3542 13.0617 60.3542 13.82C60.3542 13.8317 60.3542 13.8492 60.3542 13.8725C60.3542 13.8842 60.3542 13.9017 60.3542 13.925H58.2017C58.2017 13.8667 58.1958 13.8025 58.1842 13.7325C58.1842 13.6508 58.1783 13.575 58.1667 13.505C58.0617 12.665 57.7292 11.9183 57.1692 11.265C56.6092 10.6117 55.8917 10.0925 55.0167 9.7075C54.1417 9.3225 53.15 9.13 52.0417 9.13C50.7933 9.13 49.6267 9.41583 48.5417 9.9875C47.4683 10.5475 46.5992 11.3875 45.9342 12.5075C45.2692 13.6275 44.9367 15.0275 44.9367 16.7075C44.9367 18.3758 45.2633 19.7817 45.9167 20.925C46.5817 22.0567 47.4508 22.9142 48.5242 23.4975C49.6092 24.0692 50.7817 24.355 52.0417 24.355C53.4183 24.355 54.5558 24.1275 55.4542 23.6725C56.3525 23.2175 57.0292 22.6283 57.4842 21.905C57.9392 21.1817 58.1783 20.4292 58.2017 19.6475H60.3542C60.3542 20.4292 60.1733 21.2167 59.8117 22.01C59.4617 22.8033 58.9367 23.5267 58.2367 24.18C57.5483 24.8333 56.685 25.3583 55.6467 25.755C54.62 26.14 53.4242 26.3325 52.0592 26.3325ZM71.5465 26.28C71.0215 26.28 70.5082 26.2158 70.0065 26.0875C69.5165 25.9592 69.0732 25.7317 68.6765 25.405C68.2915 25.0667 67.9882 24.6058 67.7665 24.0225C67.5449 23.4392 67.434 22.6983 67.434 21.8C67.434 21.555 67.434 21.3042 67.434 21.0475C67.434 20.7792 67.434 20.4992 67.434 20.2075V9.3225H62.954V7.415H66.174C66.4774 7.415 66.7165 7.40333 66.8915 7.38C67.0665 7.35667 67.189 7.29833 67.259 7.205C67.3407 7.11167 67.3874 6.96583 67.399 6.7675C67.4224 6.56917 67.434 6.295 67.434 5.945V1.4125H69.604V7.415H75.554V9.3225H69.604V19.49C69.604 19.77 69.604 20.0383 69.604 20.295C69.604 20.5517 69.604 20.7908 69.604 21.0125C69.604 22.0625 69.7557 22.885 70.059 23.48C70.374 24.075 70.9632 24.3725 71.8265 24.3725C72.1532 24.3725 72.474 24.3433 72.789 24.285C73.104 24.2267 73.3432 24.1625 73.5065 24.0925V25.9825C73.3082 26.0642 73.034 26.1342 72.684 26.1925C72.334 26.2508 71.9549 26.28 71.5465 26.28ZM87.5202 26.315C85.7002 26.315 84.0902 25.9008 82.6902 25.0725C81.2902 24.2325 80.1935 23.0833 79.4002 21.625C78.6069 20.1667 78.2102 18.5217 78.2102 16.69C78.2102 14.8467 78.6069 13.2075 79.4002 11.7725C80.1935 10.3375 81.2902 9.21167 82.6902 8.395C84.0902 7.57833 85.7002 7.17 87.5202 7.17C89.3402 7.17 90.9502 7.57833 92.3502 8.395C93.7502 9.21167 94.8469 10.3375 95.6402 11.7725C96.4335 13.2075 96.8302 14.8467 96.8302 16.69C96.8302 18.5217 96.4335 20.1667 95.6402 21.625C94.8469 23.0833 93.7502 24.2325 92.3502 25.0725C90.9502 25.9008 89.3402 26.315 87.5202 26.315ZM87.5202 24.3375C88.9202 24.3375 90.151 24.0108 91.2127 23.3575C92.286 22.7042 93.126 21.8 93.7327 20.645C94.3394 19.49 94.6427 18.1717 94.6427 16.69C94.6427 15.1967 94.3394 13.8842 93.7327 12.7525C93.126 11.6208 92.286 10.74 91.2127 10.11C90.151 9.46833 88.9202 9.1475 87.5202 9.1475C86.1319 9.1475 84.901 9.46833 83.8277 10.11C82.7544 10.74 81.9144 11.6208 81.3077 12.7525C80.701 13.8842 80.3977 15.1967 80.3977 16.69C80.3977 18.1717 80.701 19.49 81.3077 20.645C81.9144 21.8 82.7544 22.7042 83.8277 23.3575C84.901 24.0108 86.1319 24.3375 87.5202 24.3375ZM101.951 26V7.415H104.121V12.8925L103.351 12.6475C103.421 12.0642 103.59 11.4575 103.858 10.8275C104.138 10.1858 104.523 9.585 105.013 9.025C105.503 8.465 106.116 8.01583 106.851 7.6775C107.597 7.3275 108.484 7.1525 109.511 7.1525C110.257 7.1525 110.858 7.21667 111.313 7.345C111.768 7.47333 112.054 7.5725 112.171 7.6425L111.576 9.7425C111.459 9.66083 111.22 9.55583 110.858 9.4275C110.496 9.29917 109.977 9.235 109.301 9.235C108.321 9.235 107.498 9.4275 106.833 9.8125C106.168 10.1858 105.637 10.6758 105.241 11.2825C104.844 11.8892 104.558 12.5367 104.383 13.225C104.208 13.9017 104.121 14.555 104.121 15.185V26H101.951ZM132.629 16.41C132.629 19.7933 131.871 22.2958 130.354 23.9175C128.849 25.5275 126.743 26.3325 124.037 26.3325C121.33 26.3325 119.218 25.5275 117.702 23.9175C116.197 22.2958 115.444 19.7933 115.444 16.41C115.444 15.885 115.444 15.3192 115.444 14.7125C115.444 14.1058 115.444 13.4642 115.444 12.7875V0.1875H117.614V12.8925C117.614 13.5458 117.614 14.1583 117.614 14.73C117.614 15.3017 117.614 15.8325 117.614 16.3225C117.614 19.1692 118.163 21.2225 119.259 22.4825C120.368 23.7425 121.96 24.3725 124.037 24.3725C126.113 24.3725 127.706 23.7425 128.814 22.4825C129.923 21.2225 130.477 19.1692 130.477 16.3225V0.1875H132.629V16.41ZM138.231 26V0.1875H140.366V26H138.231Z"
      fill="white"
    />
  </svg>
);

export const VectorUILogo: React.FC<LogoProps> = ({auto, small, outlined, ...props}) => {
  if (outlined) {
    return <SmallLogoOutlined {...props} />;
  }

  if (auto) {
    return (
      <div>
        <SmallLogo auto={auto} {...props} />
        <LargeLogo auto={auto} {...props} />
      </div>
    );
  }

  if (small) {
    return <SmallLogo {...props} />;
  }

  return <LargeLogo auto={auto} {...props} />;
};
